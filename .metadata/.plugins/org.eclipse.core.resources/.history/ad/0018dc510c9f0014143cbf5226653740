package test;

public class test {
	static long x;
	public static void main(String[] args) {
		// TODO Auto-generated method stub
//		long a=16l;
//		int x=10;
//		System.out.println(x);
//		System.out.println(a);
//		int z=0x1A;
//		System.out.println(z);
//		char x='你';
//		System.out.println(x);
//		int a=2147483647;
//		long b=((long)a)*4;
//		System.out.println(b);
//		boolean c=true;
////		System.out.println(c);
//		int e=-4;
//		System.out.println(e>>2);
//		String s1="abc";
//		String s2=new String("abc");
//		if(s1==s2)
//			System.out.println("Yes");
//		String s1 ="汉字abc";
//				String s2 = "汉字abc";
//				String s3 = new String("汉字abc");
//				String s4 = new String("汉字abc");
//
//				System.out.println(s1 == s2);
//				System.out.println(s1 == s3);
//				System.out.println(s3 == s4);
//		
//		Car car=new Car();
//		car.a=1;
//		
//		System.out.println(car.a);
		Leaf leaf=new Leaf();

	}

}

class Car{
	int a;
	public Car(){
		
	}
}


class Root  
{  
//    static{  
//        System.out.println("Root 的静态初始化块");  
//    }  
//    {  
//        System.out.println("Root 的普通初始化块");  
//    }  
    public Root()  
    {  
        System.out.println("Root 的无参数的构造器");  
    }  
}  
  
class Mid extends Root  
{  
//    static{  
//        System.out.println("Mid 的静态初始化块");  
//    }  
    public Mid()  
    {  
        System.out.println("Mid 的无参数的构造器");  
    }  
    public Mid(String msg)  
    {  
        //通过this调用同一类中重载的构造器  
       // this();  
        System.out.println("Mid的带参构造器,其参数值:" + msg);  
    }  
}  
  
class Leaf extends Mid  
{  
//    static{  
//        System.out.println("Leaf 的静态初始化块");  
//    }  
//    {  
//        System.out.println("Leaf 的普通初始化块");  
//    }  
    public Leaf()  
    {  
        //通过surper 调用父类中有一个字符串参数的构造器  
        super("Struts 2权威指南");  
        System.out.println("执行Leaf的构造器");  
    }  
}  
  
